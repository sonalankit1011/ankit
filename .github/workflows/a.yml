name: Multi-Job Workflow with Self-Hosted Runner

on:
  push:
    branches:
      - main

jobs:
  setup-environment:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip install -r requirements.txt

  short-runtime-job-1:
    name: Short Runtime Task - Unit Tests
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Unit Tests
        run: |
          python -m unittest discover -s tests/unit

  short-runtime-job-2:
    name: Short Runtime Task - Code Linting
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Code Linter
        run: |
          flake8 src/

  self-hosted-runner-job:
    name: Task on Self-Hosted Runner
    runs-on: self-hosted
    needs: [short-runtime-job-1, short-runtime-job-2]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Custom Task on Self-Hosted Runner
        run: |
          echo "Running long-running tasks on self-hosted runner..."
          python scripts/long_task.py

  external-service-job:
    name: Leverage External Service
    runs-on: ubuntu-latest
    needs: self-hosted-runner-job
    steps:
      - name: Trigger External Service
        run: |
          echo "Calling external service to process data..."
          curl -X POST -H "Authorization: Bearer ${{ secrets.EXTERNAL_SERVICE_API_KEY }}" \
            -d '{"job": "process_data"}' \
            https://api.external-service.com/process

      - name: Poll External Service for Results
        run: |
          echo "Polling external service for task completion..."
          STATUS=""
          until [ "$STATUS" == "completed" ]; do
            STATUS=$(curl -s -H "Authorization: Bearer ${{ secrets.EXTERNAL_SERVICE_API_KEY }}" \
              https://api.external-service.com/status | jq -r '.status')
            sleep 30
          done
          echo "Task completed!"
